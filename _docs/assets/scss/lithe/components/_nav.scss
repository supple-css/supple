/*  =========================================================================
    lithe.components.nav
/   ========================================================================= */

/*  Use/Forward rules
    `@use` or `@forward` everything you need here from other files.
    These can include variables, mixins & other includes.
/   ========================================================================= */

@use "sass:math";
@use "../settings/vars";
@use "tools/typography";
@use "tools/space";
@use "tools/responsive";

/*  Variables
/   ========================================================================= */

/*  Functions/Mixins
/   ========================================================================= */

/*  Module
/   ========================================================================= */

.c-nav {
  @include responsive.mq('desk') {
    position: sticky;
    top: space.get('base');
    max-height: calc(100vh - #{space.get('base') * 2});
    overflow: auto;
    background-color: var(--color-brand-secondary);
    border-radius: space.get('tiny');

    &::-webkit-scrollbar {
      height: space.get('small');
    }
    &::-webkit-scrollbar-track {
      border-top-right-radius: space.get('tiny');
      border-bottom-right-radius: space.get('tiny');
      background-color: var(--color-brand-secondary);
    }
    &::-webkit-scrollbar-thumb {
      border-top-right-radius: space.get('tiny');
      border-bottom-right-radius: space.get('tiny');
      background-color: var(--color-brand-primary);
    }
  }
}

.c-nav__button {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  padding: calc(#{space.get('tiny')} - 2px);
  border: 2px solid var(--color-brand-tertiary);
  border-radius: space.get('tiny');
  outline: none;
  color: var(--color-dark);
  background-color: var(--color-brand-tertiary);

  svg {
    display: block;
    width: 1em;
    margin-inline-end: space.get('tiny');
  }

  &:focus {
    border-color: var(--color-brand-secondary);
  }

  @include responsive.mq('desk') {
    display: none;
  }
}

.c-nav__list {
  display: none;

  [aria-expanded='true'] + & {
    display: block;
  }

  @include responsive.mq('until-desk') {
    background-color: var(--color-brand-secondary);
    border-radius: space.get('tiny');
    overflow: hidden;
    margin-block-start: space.get('small');
  }

  @include responsive.mq('desk') {
    display: block;
  }
}

.c-nav__category {
  margin-block-start: space.get('small');
  padding-inline-start: space.get('small');
  padding-inline-end: space.get('small');
  @include typography.font-size(vars.$font-size-zeta);
  color: var(--color-brand-tertiary);
}

.c-nav__item {
  //
}

.c-nav__link {
  display: flex;
  align-items: center;
  text-decoration: none;
  padding-block-start: space.get('tiny');
  padding-block-end: space.get('tiny');
  padding-inline-start: space.get('small');
  padding-inline-end: space.get('small');

  &[aria-current] {
    background-color: rgba(255, 255, 255, 0.1);
  }

  &[aria-current],
  &:hover,
  &:focus {
    color: var(--color-brand-primary);
  }

  @include responsive.mq('until-desk') {
    padding-block-start: space.get('tiny');
    padding-block-end: space.get('tiny');
  }

  @include responsive.mq('desk') {
    padding-block-start: math.div(space.get('tiny'), 2);
    padding-block-end: math.div(space.get('tiny'), 2);
  }

  svg {
    flex: 0 0 1em;
    transform: rotate(-90deg);
    margin-inline-start: auto;
  }
}
